#!/usr/bin/env php
<?php

$rootDir = realpath(__DIR__.'/../');
$databaseDir = $rootDir.'/cache';

array_shift($argv);
if (!isset($argv[0])) {
    exit(<<<EOF
SQLite Database script management.

Specify a command to run:

install: initialize database
load-fixtures <file>: load fixtures

EOF
    );
}

if (!in_array($command = array_shift($argv), array('install', 'load-fixtures'))) {
    exit(sprintf("Command \"%s\" does not exist.\n", $command));
}

if (!is_dir($databaseDir)) {
    mkdir($databaseDir, 0777, true);
}


$app = require_once __DIR__ . '/../app/bootstrap.php';

// Install database
if ($command == 'install')
{
	$driver = $app['db']->getDriver()->getName();
	switch ($driver)
	{
		case 'pdo_sqlite':
			$file = __DIR__ . '/../data/sql/schema.sqlite3.sql';
			break;
		case 'pdo_mysql':
			$file = __DIR__ . '/../data/sql/schema.mysql.sql';
			break;
		default:
			exit(sprintf("Driver \"%s\" is not supported.\n", $driver));
	}

	$aSQL = explode(';', file_get_contents($file));
	foreach ($aSQL as $sql) 
	{
		$sql = trim($sql);
		if ($sql)
		{
			$app['db']->query($sql);
		}
	}
}
// Load fixtures
elseif ($command == 'load-fixtures')
{
	$file = $argv[0];

	$aSQL = explode(';', file_get_contents($file));
	foreach ($aSQL as $sql) 
	{
		$sql = trim($sql);
		if ($sql)
		{
			$app['db']->query($sql);
		}
	}
}
